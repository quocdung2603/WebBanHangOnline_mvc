@model WebBanHangOnline.Models.EF.ImportProduct
@using WebBanHangOnline.Models.EF
@using Newtonsoft.Json
@{
    ViewBag.Title = "Thêm Phiếu Nhập";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var i = 0;
    List<Product> p = ViewBag.p;
    var ListSp = p.Select(item => new
    {
        item.Title,
        item.Id,
        item.Quantity,
        item.OriginalPrice,
        item.Price,
    }).ToList();

    var LP = Newtonsoft.Json.JsonConvert.SerializeObject(ListSp);

    var dt = ViewBag.Titles;
}
@{
    List<ProductSize> ProductSizeNow = new List<ProductSize>();
    foreach (var item in Model.ImportProductDetails)
    {

        ProductSizeNow.Add(new ProductSize
        {
            ProductId = item.ProductId,
            SizeName = item.Size,
            ColorName = item.Color,
            Quantity = item.Quantity,
        });
    }
}
<link rel="stylesheet" href="~/Content/assets/styles/CreateExam.css" />
@section naviheader {
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Trang Chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/category" class="nav-link">@ViewBag.Title</a>
        </li>
    </ul>
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Quản Lý Nhập Hàng</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<div class="page-wrapper">
    <div class="container-fluid">
        @*Xây dựng nội dung ở đây*@

        <div class="ContainerCreateExam">
            <form action="/admin/ImportProduct/edit" method="post">
                <div class="form-horizontal">
                    <h4>Phiếu Nhập Hàng</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <label class="control-label col-md-2">Tên Đợt Nhập Hàng</label>
                        <div class="col-md-10">
                            <input type="text" name="TenDotNhapHang" class="NameKyThi" value="@Model.Title" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2">Ghi Chú</label>
                        <div class="col-md-10">
                            <textarea type="text" name="GhiChu" class="NameKyThi" value="@Model.Note"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            <input type="hidden" name="ipId" value="@Model.Id" />
                        </div>
                    </div>

                    @*mau hien tai*@

                    @*Thông tin phiếu nhập*@
                    <table class="table table-bordered table-hover">
                        <thead style="background-color:aquamarine">
                            <tr class="text-center">
                                <th>Mã Sản Phẩm</th>
                                <th>Tên Sản Phẩm</th>
                                <th>Giá Nhập</th>
                                <th>Giá Bán</th>
                                <th>Màu Sắc</th>
                                <th>Kích Thước</th>
                                <th>Số Lượng</th>
                            </tr>
                        </thead>
                        <tbody id="Exams">
                            @foreach (var item in Model.ImportProductDetails)
                            {
                                <tr class="text-center" id="Exam">
                                    <td style="display:none;">
                                        <div class="form-group" style="display: flex; flex-direction: row; align-items: center; justify-content: center;">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input type="hidden" name="LProduct[@i].Id" value="@item.Id" />
                                            </div>
                                        </div>
                                    </td>
                                    <td style="display:none;">
                                        <div class="form-group" style="display: flex; flex-direction: row; align-items: center; justify-content: center;">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input type="hidden" name="ProductSizeNow[@i].ProductId" value="@ProductSizeNow[i].ProductId" />
                                                <input type="hidden" name="ProductSizeNow[@i].ColorName" value="@ProductSizeNow[i].ColorName" />
                                                <input type="hidden" name="ProductSizeNow[@i].SizeName" value="@ProductSizeNow[i].SizeName" />
                                                <input type="hidden" name="ProductSizeNow[@i].Quantity" value="@ProductSizeNow[i].Quantity" />
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input class="form-control" name="LProduct[@i].ProductId" id="@i" value="@item.ProductId" />
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input list="Titles" id="Title" class="form-control" name="LProduct[@i].Title" value="@item.Title">
                                                <datalist id="Titles">
                                                    <option value="">
                                                </datalist>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input class="form-control" name="LProduct[@i].OriginalPrice" value="@item.OriginalPrice" />
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input class="form-control" name="LProduct[@i].Price" value="@item.Price" />
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input class="form-control" name="LProduct[@i].Color" value="@item.Color" />
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input class="form-control" name="LProduct[@i].Size" value="@item.Size" />
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-group">
                                            <div class="col-md-10" style="background-color: white;">
                                                <input class="form-control" name="LProduct[@i].Quantity" value="@item.Quantity" />
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }

                        </tbody>
                    </table>
                    <div style="margin-top: 10px">
                        <button type="submit" class="btn btn-primary">Cập Nhật</button>
                    </div>
                </div>
            </form>
            @*<button class="btn btn-primary" onclick="ThemCauHoi()" style="float: right">Thêm Sản Phẩm</button>*@
        </div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
</div>
@section scripts{

    <script>
        //phieu nhap
        function Test() {
            var examsForm = document.getElementById('Exams');
            var examClone = document.getElementById('Exam').cloneNode(true);
            console.log(examsForm);
        }
        var Lquestion = @Html.Raw(LP);

        const currentTime = document.querySelector("h1"),
            content = document.querySelector(".content"),
            selectMenu = document.querySelectorAll("datalist"),
            setAlarmBtn = document.querySelector("button");

        for (let i = 0; i < Lquestion.length; i++) {
            let option = `<option value="${Lquestion[i].Title}">`;
            selectMenu[0].firstElementChild.insertAdjacentHTML("afterend", option);
        }

        document.getElementById("Title").addEventListener("input", function () {

            var selectedValue = this.value; // Lấy giá trị mà bạn chọn trong input
            var selectedObject = Lquestion.find(function (item) {
                return item.Title === selectedValue;
            });
            var item = this.parentElement.parentElement.parentElement.parentElement;
            var Einput = item.getElementsByTagName('INPUT');
            Einput[0].value = selectedObject.Id;
            Einput[2].value = selectedObject.OriginalPrice;
            Einput[3].value = selectedObject.Price;
        });
    </script>
    <script>
        var i = 0;
        var id = 0;
        function ThemCauHoi() {

            i += 1; // Tăng giá trị i lên 1

            console.log("i sau khi tăng lên 1: " + i);

            var examsForm = document.getElementById('Exams');
            var examClone = document.getElementById('Exam').cloneNode(true);
            var inputFields = examClone.getElementsByTagName('input');

            // Cập nhật name của trường input để chứa giá trị mới của i
            for (var j = 0; j < inputFields.length; j++) {
                inputFields[j].name = "LProduct[" + i + "]." + inputFields[j].name.split(".")[1];
                inputFields[j].value = '';
            }
            // Thêm bản sao vào Exams
            examsForm.appendChild(examClone);

            var newTitleInput = examClone.querySelector('input[name="LProduct[' + i + '].Title"]');
            newTitleInput.addEventListener("input", function () {
                var selectedValue = this.value; // Lấy giá trị mà bạn chọn trong input
                var selectedObject = Lquestion.find(function (item) {
                    return item.Title === selectedValue;
                });
                var item = this.parentElement.parentElement.parentElement.parentElement;
                var Einput = item.getElementsByTagName('INPUT');
                Einput[0].value = selectedObject.Id;
                Einput[2].value = selectedObject.OriginalPrice;
                Einput[3].value = selectedObject.Price;
            });
        }

        function ThemKichThuoc() {
            i += 1; // Tăng giá trị i lên 1

            console.log("i sau khi tăng lên 1: " + i);

            var examsForm = document.getElementById('Exams');
            var examClone = document.getElementById('Exam').cloneNode(true);
            var inputFields = examClone.getElementsByTagName('input');

            // Cập nhật name của trường input để chứa giá trị mới của i
            for (var j = 0; j < inputFields.length; j++) {
                inputFields[j].name = "LProduct[" + i + "]." + inputFields[j].name.split(".")[1];
            }
            // Thêm bản sao vào Exams
            examsForm.appendChild(examClone);
        }
    </script>
}

